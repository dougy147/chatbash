#!/bin/bash

check_args() {
	args=("$@")
	args_number=${#args[@]}
	for (( i=0;i<$args_number;i++)); do
		CURRENT_ARG=$(echo ${args[${i}]})
		if [[ -f $CURRENT_ARG ]]; then
			FILE_GIVEN=true
			FILE_TO_READ=$CURRENT_ARG
		fi
		case "$CURRENT_ARG" in
			"--debug")
				debug_on ;;
			"--image")
				USER_IMAGE=true ;;
			"--list-models")
				#SELECT_MODEL=true ;;
				show_models_list;;
			"--hist=off")
				HISTORY=false ;;
			"--hist=on")
				HISTORY=true ;;
			"--select-model")
				USER_SELECT_MODEL=true ;;
				#select_model;;
			"--type-writer=on")
				TYPEWRITER=true ;;
			"--type-writer=off")
				TYPEWRITER=false ;;
			--audio*)
				AUDIO=true
				if [[ $(echo "$CURRENT_ARG" | grep -Po -- '--audio=\K.*') ]]; then
					CB_LANG=$(echo "$CURRENT_ARG" | grep -Po -- '--audio=\K.*')
					case "$CB_LANG" in
						"de")
							CB_LANG="de-DE";;
						"en")
							CB_LANG="en-GB";;
						"es")
							CB_LANG="es-ES";;
						"fr")
							CB_LANG="fr-FR";;
						"it")
							CB_LANG="it-IT";;
						"us")
							CB_LANG="en-US";;
					esac
				fi ;;
			*)
				PROMPT_IN_ARG+=("$CURRENT_ARG") ;;
		esac
	done
	if [[ -n $PROMPT_IN_ARG ]]; then
		printf -v USER_PROMPT "%s " "${PROMPT_IN_ARG[@]}"
		USER_PROMPT="${USER_PROMPT%?}"
	fi

	if [[ -n "$GET_MODELS_LIST" ]]; then
		if [[ ${DEBUG} = true ]]; then
			eval ${DEBUG_CB_FUNC}
			echo "User asked for models list."
			eval ${DEBUG_END}
		fi
		show_models_list
		exit 0
	fi

	# First read for user_prompt; else for file; else ask to put prompt
	if [[ -n "$USER_PROMPT" ]]; then
		if [[ ${DEBUG} = true ]]; then
			eval ${DEBUG_CB_FUNC}
			echo "Prompt provided in the arguments: ${USER_PROMPT}"
			eval ${DEBUG_END}
		fi
		encode_user_prompt
	elif [[ -n "$FILE_GIVEN" ]]; then
		if [[ ${DEBUG} = true ]]; then
			eval ${DEBUG_CB_FUNC}
			echo "Reading the file $FILE_TO_READ as input."
			eval ${DEBUG_END}
		fi
		USER_PROMPT=$(cat "$FILE_TO_READ")
		encode_user_prompt
	else
		if [[ ${DEBUG} = true ]]; then
			eval ${DEBUG_CB_FUNC}
			echo "No input given. Asking user with prompt."
			eval ${DEBUG_END}
		fi
		tput bold
		#read -p "> " -e -d '' USER_PROMPT
		read -p "> " USER_PROMPT
		tput sgr0
		encode_user_prompt
	fi

	if [[ -n "$USER_SELECT_MODEL" ]]; then
		if [[ ${DEBUG} = true ]]; then
			eval ${DEBUG_CB_FUNC}
			echo "User asked to select a model."
			eval ${DEBUG_END}
		fi
		select_model
	fi
}
